package es.upv.dsic.quep.model;
// Generated 04-ago-2016 14:00:00 by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Response generated by hbm2java
 */
@Entity
@Table(name="response"
    ,schema="public"
)
public class Response  implements java.io.Serializable {


     private ResponseId id;
     private QuepQuestionResponseOption quepQuestionResponseOption;
     private QuestionnaireQuepQuestion questionnaireQuepQuestion;
     private Stakeholder stakeholder;
     private int idPrinciple;
     private String responseOption;
     private String comment;
     private String pagenumber;
     private Integer computedValue;
     private String creationUser;
     private Date creationDate;
     private String modificationUser;
     private Date modificationDate;
     private int active;
     private String audit;
     private QuestionnaireResponse questionnaireResponse;

    public Response() {
    }

	
    public Response(ResponseId id, QuepQuestionResponseOption quepQuestionResponseOption, QuestionnaireQuepQuestion questionnaireQuepQuestion, Stakeholder stakeholder, int idPrinciple, String responseOption, String creationUser, Date creationDate, int active, String audit) {
        this.id = id;
        this.quepQuestionResponseOption = quepQuestionResponseOption;
        this.questionnaireQuepQuestion = questionnaireQuepQuestion;
        this.stakeholder = stakeholder;
        this.idPrinciple = idPrinciple;
        this.responseOption = responseOption;
        this.creationUser = creationUser;
        this.creationDate = creationDate;
        this.active = active;
        this.audit = audit;
    }
    public Response(ResponseId id, QuepQuestionResponseOption quepQuestionResponseOption, QuestionnaireQuepQuestion questionnaireQuepQuestion, Stakeholder stakeholder, int idPrinciple, String responseOption, String comment, String pagenumber, Integer computedValue, String creationUser, Date creationDate, String modificationUser, Date modificationDate, int active, String audit, QuestionnaireResponse questionnaireResponse) {
       this.id = id;
       this.quepQuestionResponseOption = quepQuestionResponseOption;
       this.questionnaireQuepQuestion = questionnaireQuepQuestion;
       this.stakeholder = stakeholder;
       this.idPrinciple = idPrinciple;
       this.responseOption = responseOption;
       this.comment = comment;
       this.pagenumber = pagenumber;
       this.computedValue = computedValue;
       this.creationUser = creationUser;
       this.creationDate = creationDate;
       this.modificationUser = modificationUser;
       this.modificationDate = modificationDate;
       this.active = active;
       this.audit = audit;
       this.questionnaireResponse = questionnaireResponse;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="idStakeholder", column=@Column(name="id_stakeholder", nullable=false) ), 
        @AttributeOverride(name="idQuepQuestion", column=@Column(name="id_quep_question", nullable=false) ), 
        @AttributeOverride(name="idPractice", column=@Column(name="id_practice", nullable=false) ), 
        @AttributeOverride(name="idQuestionnaire", column=@Column(name="id_questionnaire", nullable=false) ), 
        @AttributeOverride(name="idRole", column=@Column(name="id_role", nullable=false) ), 
        @AttributeOverride(name="idOrganization", column=@Column(name="id_organization", nullable=false) ) } )
    public ResponseId getId() {
        return this.id;
    }
    
    public void setId(ResponseId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="id_quep_question", referencedColumnName="id_quep_question", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="id_response_option", referencedColumnName="id_response_option", insertable=false, updatable=false) } )
    public QuepQuestionResponseOption getQuepQuestionResponseOption() {
        return this.quepQuestionResponseOption;
    }
    
    public void setQuepQuestionResponseOption(QuepQuestionResponseOption quepQuestionResponseOption) {
        this.quepQuestionResponseOption = quepQuestionResponseOption;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="id_quep_question", referencedColumnName="id_quep_question", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="id_questionnaire", referencedColumnName="id_questionnaire", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="id_practice", referencedColumnName="id_practice", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="id_role", referencedColumnName="id_role", nullable=false, insertable=false, updatable=false) } )
    public QuestionnaireQuepQuestion getQuestionnaireQuepQuestion() {
        return this.questionnaireQuepQuestion;
    }
    
    public void setQuestionnaireQuepQuestion(QuestionnaireQuepQuestion questionnaireQuepQuestion) {
        this.questionnaireQuepQuestion = questionnaireQuepQuestion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_stakeholder", nullable=false, insertable=false, updatable=false)
    public Stakeholder getStakeholder() {
        return this.stakeholder;
    }
    
    public void setStakeholder(Stakeholder stakeholder) {
        this.stakeholder = stakeholder;
    }

    
    @Column(name="id_principle", nullable=false)
    public int getIdPrinciple() {
        return this.idPrinciple;
    }
    
    public void setIdPrinciple(int idPrinciple) {
        this.idPrinciple = idPrinciple;
    }

    
    @Column(name="response_option", nullable=false)
    public String getResponseOption() {
        return this.responseOption;
    }
    
    public void setResponseOption(String responseOption) {
        this.responseOption = responseOption;
    }

    
    @Column(name="comment")
    public String getComment() {
        return this.comment;
    }
    
    public void setComment(String comment) {
        this.comment = comment;
    }

    
    @Column(name="pagenumber")
    public String getPagenumber() {
        return this.pagenumber;
    }
    
    public void setPagenumber(String pagenumber) {
        this.pagenumber = pagenumber;
    }

    
    @Column(name="computed_value", precision=5, scale=0)
    public Integer getComputedValue() {
        return this.computedValue;
    }
    
    public void setComputedValue(Integer computedValue) {
        this.computedValue = computedValue;
    }

    
    @Column(name="creation_user", nullable=false)
    public String getCreationUser() {
        return this.creationUser;
    }
    
    public void setCreationUser(String creationUser) {
        this.creationUser = creationUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="creation_date", nullable=false, length=13)
    public Date getCreationDate() {
        return this.creationDate;
    }
    
    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    
    @Column(name="modification_user")
    public String getModificationUser() {
        return this.modificationUser;
    }
    
    public void setModificationUser(String modificationUser) {
        this.modificationUser = modificationUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="modification_date", length=13)
    public Date getModificationDate() {
        return this.modificationDate;
    }
    
    public void setModificationDate(Date modificationDate) {
        this.modificationDate = modificationDate;
    }

    
    @Column(name="active", nullable=false)
    public int getActive() {
        return this.active;
    }
    
    public void setActive(int active) {
        this.active = active;
    }

    
    @Column(name="audit", nullable=false)
    public String getAudit() {
        return this.audit;
    }
    
    public void setAudit(String audit) {
        this.audit = audit;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="response")
    public QuestionnaireResponse getQuestionnaireResponse() {
        return this.questionnaireResponse;
    }
    
    public void setQuestionnaireResponse(QuestionnaireResponse questionnaireResponse) {
        this.questionnaireResponse = questionnaireResponse;
    }




}


