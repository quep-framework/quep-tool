package es.upv.dsic.quep.model;
// Generated 10-ago-2016 23:05:31 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Questionnaire generated by hbm2java
 */
@Entity
@Table(name="questionnaire"
    ,schema="public"
)
public class Questionnaire  implements java.io.Serializable {


     private QuestionnaireId id;
     private Practice practice;
     private RolePractice rolePractice;
     private String creationUser;
     private Date creationDate;
     private String modificationUser;
     private Date modificationDate;
     private int active;
     private String audit;
     private String name;
     private String description;
     private Set<QuestionnaireQuepQuestion> questionnaireQuepQuestions = new HashSet<QuestionnaireQuepQuestion>(0);
     private Set<QuestionnaireResponse> questionnaireResponses = new HashSet<QuestionnaireResponse>(0);

    public Questionnaire() {
    }

	
    public Questionnaire(QuestionnaireId id, Practice practice, RolePractice rolePractice, String creationUser, Date creationDate, int active, String audit) {
        this.id = id;
        this.practice = practice;
        this.rolePractice = rolePractice;
        this.creationUser = creationUser;
        this.creationDate = creationDate;
        this.active = active;
        this.audit = audit;
    }
    public Questionnaire(QuestionnaireId id, Practice practice, RolePractice rolePractice, String creationUser, Date creationDate, String modificationUser, Date modificationDate, int active, String audit, String name, String description, Set<QuestionnaireQuepQuestion> questionnaireQuepQuestions, Set<QuestionnaireResponse> questionnaireResponses) {
       this.id = id;
       this.practice = practice;
       this.rolePractice = rolePractice;
       this.creationUser = creationUser;
       this.creationDate = creationDate;
       this.modificationUser = modificationUser;
       this.modificationDate = modificationDate;
       this.active = active;
       this.audit = audit;
       this.name = name;
       this.description = description;
       this.questionnaireQuepQuestions = questionnaireQuepQuestions;
       this.questionnaireResponses = questionnaireResponses;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="id", column=@Column(name="id", nullable=false) ), 
        @AttributeOverride(name="idPractice", column=@Column(name="id_practice", nullable=false) ), 
        @AttributeOverride(name="idRole", column=@Column(name="id_role", nullable=false) ) } )
    public QuestionnaireId getId() {
        return this.id;
    }
    
    public void setId(QuestionnaireId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_practice", nullable=false, insertable=false, updatable=false)
    public Practice getPractice() {
        return this.practice;
    }
    
    public void setPractice(Practice practice) {
        this.practice = practice;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="id_role", referencedColumnName="id_role", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="id_practice", referencedColumnName="id_practice", nullable=false, insertable=false, updatable=false) } )
    public RolePractice getRolePractice() {
        return this.rolePractice;
    }
    
    public void setRolePractice(RolePractice rolePractice) {
        this.rolePractice = rolePractice;
    }

    
    @Column(name="creation_user", nullable=false)
    public String getCreationUser() {
        return this.creationUser;
    }
    
    public void setCreationUser(String creationUser) {
        this.creationUser = creationUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="creation_date", nullable=false, length=13)
    public Date getCreationDate() {
        return this.creationDate;
    }
    
    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    
    @Column(name="modification_user")
    public String getModificationUser() {
        return this.modificationUser;
    }
    
    public void setModificationUser(String modificationUser) {
        this.modificationUser = modificationUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="modification_date", length=13)
    public Date getModificationDate() {
        return this.modificationDate;
    }
    
    public void setModificationDate(Date modificationDate) {
        this.modificationDate = modificationDate;
    }

    
    @Column(name="active", nullable=false)
    public int getActive() {
        return this.active;
    }
    
    public void setActive(int active) {
        this.active = active;
    }

    
    @Column(name="audit", nullable=false)
    public String getAudit() {
        return this.audit;
    }
    
    public void setAudit(String audit) {
        this.audit = audit;
    }

    
    @Column(name="name")
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="description")
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="questionnaire")
    public Set<QuestionnaireQuepQuestion> getQuestionnaireQuepQuestions() {
        return this.questionnaireQuepQuestions;
    }
    
    public void setQuestionnaireQuepQuestions(Set<QuestionnaireQuepQuestion> questionnaireQuepQuestions) {
        this.questionnaireQuepQuestions = questionnaireQuepQuestions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="questionnaire")
    public Set<QuestionnaireResponse> getQuestionnaireResponses() {
        return this.questionnaireResponses;
    }
    
    public void setQuestionnaireResponses(Set<QuestionnaireResponse> questionnaireResponses) {
        this.questionnaireResponses = questionnaireResponses;
    }




}


